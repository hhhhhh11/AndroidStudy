package com.updatedemo.util;

public class DataConstant {

	/** 获取时间 */
	public static byte[] getDate = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x04, (byte) 0x1D, (byte) 0x05, (byte) 0x2F, (byte) 0x09,
			(byte) 0x03, (byte) 0x39 };

	/** 蜂鸣器 */
	public static byte[] buzzerBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x12, (byte) 0x1D, (byte) 0x01, (byte) 0x2F, (byte) 0x0D,
			(byte) 0x00, (byte) 0x01, (byte) 0x25, (byte) 0x80, (byte) 0x01,
			(byte) 0x2C, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0xA6 };

	/** 按键 */
	public static byte[] keyBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x28, (byte) 0xB1, (byte) 0x03, (byte) 0x2F, (byte) 0x01,
			(byte) 0x00, (byte) 0x00, (byte) 0x13, (byte) 0x88, (byte) 0x03,
			(byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x12, (byte) 0xC7, (byte) 0xEB, (byte) 0xCA,
			(byte) 0xE4, (byte) 0xC8, (byte) 0xEB, (byte) 0xD7, (byte) 0xD6,
			(byte) 0xB7, (byte) 0xFB, (byte) 0xB4, (byte) 0xAE, (byte) 0x03,
			(byte) 0x43 };
	/** 密码键盘 */
	public static byte[] passWordKeyBuf = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x61, (byte) 0x1A, (byte) 0x01, (byte) 0x2F,
			(byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x36,
			(byte) 0x32, (byte) 0x32, (byte) 0x32, (byte) 0x30, (byte) 0x32,
			(byte) 0x31, (byte) 0x34, (byte) 0x30, (byte) 0x32, (byte) 0x30,
			(byte) 0x30, (byte) 0x35, (byte) 0x32, (byte) 0x37, (byte) 0x34,
			(byte) 0x34, (byte) 0x31, (byte) 0x37, (byte) 0x46, (byte) 0x00,
			(byte) 0x00, (byte) 0x06, (byte) 0x46, (byte) 0x46, (byte) 0x46,
			(byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x46, (byte) 0x46,
			(byte) 0x46, (byte) 0x46, (byte) 0x01, (byte) 0x20, (byte) 0x00,
			(byte) 0x10, (byte) 0xC7, (byte) 0xEB, (byte) 0xCA, (byte) 0xE4,
			(byte) 0xC8, (byte) 0xEB, (byte) 0xC3, (byte) 0xDC, (byte) 0xC2,
			(byte) 0xEB, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x01,
			(byte) 0x01, (byte) 0x01, (byte) 0x81, (byte) 0x03, (byte) 0x86 };
	/** 密码键盘随机布局指令 */
	public static byte[] keylayout = new byte[] { (byte) 0x02, (byte) 0x01,
			(byte) 0x26, (byte) 0x1A, (byte) 0x22, (byte) 0x2F, (byte) 0x01,
			(byte) 0x01, (byte) 0x20, (byte) 0x00, (byte) 0x01, (byte) 0x00,
			(byte) 0x01, (byte) 0x00, (byte) 0x32, (byte) 0x00, (byte) 0x32,
			(byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x64, (byte) 0x00, (byte) 0x32, (byte) 0x00, (byte) 0x65,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x96, (byte) 0x00,
			(byte) 0x32, (byte) 0x00, (byte) 0x97, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0xc8, (byte) 0x00, (byte) 0x32, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x32,
			(byte) 0x00, (byte) 0x64, (byte) 0x00, (byte) 0x33, (byte) 0x00,
			(byte) 0x33, (byte) 0x00, (byte) 0x64, (byte) 0x00, (byte) 0x64,
			(byte) 0x00, (byte) 0x65, (byte) 0x00, (byte) 0x33, (byte) 0x00,
			(byte) 0x96, (byte) 0x00, (byte) 0x64, (byte) 0x00, (byte) 0x97,
			(byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0xc8, (byte) 0x00,
			(byte) 0x64, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x65,
			(byte) 0x00, (byte) 0x32, (byte) 0x00, (byte) 0x96, (byte) 0x00,
			(byte) 0x33, (byte) 0x00, (byte) 0x65, (byte) 0x00, (byte) 0x64,
			(byte) 0x00, (byte) 0x96, (byte) 0x00, (byte) 0x65, (byte) 0x00,
			(byte) 0x65, (byte) 0x00, (byte) 0x96, (byte) 0x00, (byte) 0x96,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x97, (byte) 0x00,
			(byte) 0x32, (byte) 0x00, (byte) 0xc8, (byte) 0x00, (byte) 0x33,
			(byte) 0x00, (byte) 0x97, (byte) 0x00, (byte) 0x64, (byte) 0x00,
			(byte) 0xc8, (byte) 0x00, (byte) 0x65, (byte) 0x00, (byte) 0x97,
			(byte) 0x00, (byte) 0x96, (byte) 0x00, (byte) 0xc8, (byte) 0x00,
			(byte) 0x97, (byte) 0x00, (byte) 0x65, (byte) 0x00, (byte) 0xc8,
			(byte) 0x00, (byte) 0xc8, (byte) 0x03, (byte) 0x4D };

	/** 打开读卡器 */
	public static byte[] openSwip = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xD1, (byte) 0x01, (byte) 0x2F, (byte) 0x01,
			(byte) 0x01, (byte) 0x0F, (byte) 0x03, (byte) 0xF5 };
	/**
	 * 读一、二、三磁道
	 */
	public static byte[] readSwip = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x05, (byte) 0xD1, (byte) 0x04, (byte) 0x2F, (byte) 0x01,
			(byte) 0x07, (byte) 0x03, (byte) 0xFA };

	/** 关闭读卡器 */
	public static byte[] closeSwip = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x04, (byte) 0xD1, (byte) 0x02, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0xFA };

	/** 取消 */
	public static byte[] cancelBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x04, (byte) 0x1D, (byte) 0x08, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0x3C };

	/** 主密钥 */
	public static byte[] mainKeyBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x27, (byte) 0x1A, (byte) 0x02, (byte) 0x2F, (byte) 0x01,
			(byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x16, (byte) 0x25,
			(byte) 0x3C, (byte) 0x9D, (byte) 0x9D, (byte) 0x7C, (byte) 0x2F,
			(byte) 0xBB, (byte) 0xFA, (byte) 0x25, (byte) 0x3C, (byte) 0x9D,
			(byte) 0x9D, (byte) 0x7C, (byte) 0x2F, (byte) 0xBB, (byte) 0xFA,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x04 };

	/** Pin密钥 */
	public static byte[] pinKeyBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x28, (byte) 0x1A, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x02, (byte) 0x01, (byte) 0x01, (byte) 0x00, (byte) 0x16,
			(byte) 0xF4, (byte) 0x03, (byte) 0x79, (byte) 0xAB, (byte) 0x9E,
			(byte) 0x0E, (byte) 0xC5, (byte) 0x33, (byte) 0x95, (byte) 0x09,
			(byte) 0x73, (byte) 0x18, (byte) 0x23, (byte) 0x17, (byte) 0xF8,
			(byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03,
			(byte) 0x7D };

	/** Data密钥 */
	public static byte[] dataKeyBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x28, (byte) 0x1A, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x01, (byte) 0x01, (byte) 0x02, (byte) 0x00, (byte) 0x16,
			(byte) 0x95, (byte) 0x09, (byte) 0x73, (byte) 0x18, (byte) 0x23,
			(byte) 0x17, (byte) 0xF8, (byte) 0x0B, (byte) 0xF6, (byte) 0x79,
			(byte) 0x78, (byte) 0x6E, (byte) 0x24, (byte) 0x11, (byte) 0xE3,
			(byte) 0xDE, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03,
			(byte) 0xAF };

	/** Mac密钥 */
	public static byte[] macKeyBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x28, (byte) 0x1A, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0x01, (byte) 0x04, (byte) 0x00, (byte) 0x16,
			(byte) 0xA0, (byte) 0xC4, (byte) 0x5C, (byte) 0x59, (byte) 0xF1,
			(byte) 0xE5, (byte) 0x49, (byte) 0xBB, (byte) 0xDD, (byte) 0x60,
			(byte) 0x0F, (byte) 0x71, (byte) 0xD7, (byte) 0x57, (byte) 0xFB,
			(byte) 0xAC, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03,
			(byte) 0x99 };

	/** ECB加密 */
	public static byte[] ecbBuf = new byte[] { (byte) 0x02, (byte) 0x02,
			(byte) 0x34, (byte) 0x1A, (byte) 0x03, (byte) 0x2F, (byte) 0x01,
			(byte) 0x02, (byte) 0x02, (byte) 0x02, (byte) 0x16, (byte) 0x33,
			(byte) 0x36, (byte) 0x39, (byte) 0x38, (byte) 0x35, (byte) 0x32,
			(byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x36, (byte) 0x39,
			(byte) 0x38, (byte) 0x35, (byte) 0x32, (byte) 0x32, (byte) 0x32,
			(byte) 0x10, (byte) 0x43, (byte) 0x1A, (byte) 0x03, (byte) 0x2F,
			(byte) 0x02, (byte) 0x30, (byte) 0x30, (byte) 0x02, (byte) 0x30,
			(byte) 0x30, (byte) 0x10, (byte) 0x00, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0,
			(byte) 0x89, (byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F,
			(byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0,
			(byte) 0x89, (byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F,
			(byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0,
			(byte) 0x89, (byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F,
			(byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F, (byte) 0xC0,
			(byte) 0xC8, (byte) 0xC0, (byte) 0x89, (byte) 0xBA, (byte) 0x4B,
			(byte) 0xC0, (byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0,
			(byte) 0x89, (byte) 0xBA, (byte) 0x4B, (byte) 0xC0, (byte) 0x3F,
			(byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x4B, (byte) 0xC0,
			(byte) 0x3F, (byte) 0xC0, (byte) 0xC8, (byte) 0xC0, (byte) 0x89,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0x03, (byte) 0xE2 };

	/** MAC计算 */
	public static byte[] macCalculateBuf = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x20, (byte) 0x1A, (byte) 0x04, (byte) 0x2F,
			(byte) 0x01, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x03,
			(byte) 0x00, (byte) 0x06, (byte) 0x33, (byte) 0x22, (byte) 0x11,
			(byte) 0x22, (byte) 0x25, (byte) 0x26, (byte) 0x00, (byte) 0x00,
			(byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x35 };

	/** IC卡上电指令 */
	public static byte[] Icpoweron = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x03, (byte) 0x2F, (byte) 0x01,
			(byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0xC9 };

	public static byte[] Sam1poweron = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x03, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0x00, (byte) 0x03, (byte) 0xCA };

	public static byte[] Sam2poweron = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x03, (byte) 0x2F, (byte) 0x01,
			(byte) 0x04, (byte) 0x00, (byte) 0x03, (byte) 0xCD };

	/** IC卡检测指令 */
	public static byte[] IcState = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x04, (byte) 0xE1, (byte) 0x01, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0xC9 };
	/** IC卡通讯指令 */
	// public static byte[] IcCall=new byte[]{(byte)0x02 ,(byte)0x00 ,(byte)0x13
	// ,(byte)0xE1 ,(byte)0x05
	// ,(byte)0x2F,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x05,(byte)0x00,(byte)0x84,(byte)0x00,(byte)0x00,(byte)0x08,(byte)0x03,(byte)0x53};
	public static byte[] IcCall = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x14, (byte) 0xE1, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00,
			(byte) 0x84, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08,
			(byte) 0x03, (byte) 0x57 };

	public static byte[] Sam1Call = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x14, (byte) 0xE1, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00,
			(byte) 0x84, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08,
			(byte) 0x03, (byte) 0x54 };

	public static byte[] Sam2Call = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x14, (byte) 0xE1, (byte) 0x05, (byte) 0x2F, (byte) 0x01,
			(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00,
			(byte) 0x84, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08,
			(byte) 0x03, (byte) 0x53 };
	/** IC卡下电指令 */
	public static byte[] Icpoweroff = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x04, (byte) 0x2F, (byte) 0x01,
			(byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0xCE };

	public static byte[] Sam1poweroff = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x04, (byte) 0x2F, (byte) 0x01,
			(byte) 0x03, (byte) 0x00, (byte) 0x03, (byte) 0xCD };

	public static byte[] Sam2poweroff = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x06, (byte) 0xE1, (byte) 0x04, (byte) 0x2F, (byte) 0x01,
			(byte) 0x04, (byte) 0x00, (byte) 0x03, (byte) 0xCA };

	/** 初始化打印机 */
	public static byte[] iniPrinterBuf = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x05, (byte) 0x1B, (byte) 0x49, (byte) 0x2F, (byte) 0x09,
			(byte) 0x30, (byte) 0x03, (byte) 0x42 };

	public static byte[] printerstat = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x05, (byte) 0x1B, (byte) 0x47, (byte) 0x2F, (byte) 0x01,
			(byte) 0x53, (byte) 0x03, (byte) 0x27 };

	public static byte[] printerBuff = new byte[] { (byte) 0x02, (byte) 0x03,
			(byte) 0x23, (byte) 0x1B, (byte) 0x50, (byte) 0x2F, (byte) 0x0D,
			(byte) 0x5A, (byte) 0xFF, (byte) 0x00, (byte) 0x00, (byte) 0x00,
			(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
			(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03, (byte) 0x04,
			(byte) 0xD0, (byte) 0xC2, (byte) 0xB4, (byte) 0xF3, (byte) 0xC2,
			(byte) 0xBD, (byte) 0xCC, (byte) 0xD8, (byte) 0xD4, (byte) 0xBC,
			(byte) 0xC9, (byte) 0xCC, (byte) 0xBB, (byte) 0xA7, (byte) 0xC7,
			(byte) 0xA9, (byte) 0xB9, (byte) 0xBA, (byte) 0xB5, (byte) 0xA5,
			(byte) 0x0A, (byte) 0xC9, (byte) 0xCC, (byte) 0xBB, (byte) 0xA7,
			(byte) 0xC3, (byte) 0xFB, (byte) 0x3A, (byte) 0x20, (byte) 0xC3,
			(byte) 0xC0, (byte) 0xCA, (byte) 0xB3, (byte) 0x32, (byte) 0xB9,
			(byte) 0xDD, (byte) 0x0A, (byte) 0xC9, (byte) 0xCC, (byte) 0xBB,
			(byte) 0xA7, (byte) 0xBA, (byte) 0xC5, (byte) 0x3A, (byte) 0x20,
			(byte) 0x30, (byte) 0x30, (byte) 0x30, (byte) 0x35, (byte) 0x38,
			(byte) 0x30, (byte) 0x30, (byte) 0x46, (byte) 0x30, (byte) 0x30,
			(byte) 0x31, (byte) 0x36, (byte) 0x39, (byte) 0x37, (byte) 0x39,
			(byte) 0x0A, (byte) 0xD6, (byte) 0xD5, (byte) 0xB6, (byte) 0xCB,
			(byte) 0xBA, (byte) 0xC5, (byte) 0x3A, (byte) 0x20, (byte) 0x36,
			(byte) 0x30, (byte) 0x30, (byte) 0x36, (byte) 0x37, (byte) 0x30,
			(byte) 0x30, (byte) 0x35, (byte) 0x0A, (byte) 0xB2, (byte) 0xD9,
			(byte) 0xD7, (byte) 0xF7, (byte) 0xD4, (byte) 0xB1, (byte) 0xBA,
			(byte) 0xC5, (byte) 0x3A, (byte) 0x20, (byte) 0x69, (byte) 0x6D,
			(byte) 0x70, (byte) 0x6F, (byte) 0x73, (byte) 0x0A, (byte) 0xBF,
			(byte) 0xA8, (byte) 0xBA, (byte) 0xC5, (byte) 0x3A, (byte) 0x20,
			(byte) 0x36, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31,
			(byte) 0x30, (byte) 0x2A, (byte) 0x2A, (byte) 0x2A, (byte) 0x2A,
			(byte) 0x2A, (byte) 0x2A, (byte) 0x39, (byte) 0x37, (byte) 0x34,
			(byte) 0x32, (byte) 0x0A, (byte) 0xBD, (byte) 0xBB, (byte) 0xD2,
			(byte) 0xD7, (byte) 0xC0, (byte) 0xE0, (byte) 0xD0, (byte) 0xCD,
			(byte) 0x3A, (byte) 0x20, (byte) 0xCF, (byte) 0xFB, (byte) 0xB7,
			(byte) 0xD1, (byte) 0x0A, (byte) 0xC6, (byte) 0xBE, (byte) 0xD6,
			(byte) 0xA4, (byte) 0xBA, (byte) 0xC5, (byte) 0x28, (byte) 0x56,
			(byte) 0x4F, (byte) 0x55, (byte) 0x43, (byte) 0x48, (byte) 0x45,
			(byte) 0x52, (byte) 0x20, (byte) 0x4E, (byte) 0x4F, (byte) 0x2E,
			(byte) 0x29, (byte) 0x3A, (byte) 0x20, (byte) 0x31, (byte) 0x32,
			(byte) 0x36, (byte) 0x32, (byte) 0x39, (byte) 0x37, (byte) 0x0A,
			(byte) 0xBD, (byte) 0xBB, (byte) 0xD2, (byte) 0xD7, (byte) 0xCA,
			(byte) 0xB1, (byte) 0xBC, (byte) 0xE4, (byte) 0x3A, (byte) 0x20,
			(byte) 0x32, (byte) 0x30, (byte) 0x31, (byte) 0x33, (byte) 0x2D,
			(byte) 0x31, (byte) 0x31, (byte) 0x2D, (byte) 0x32, (byte) 0x31,
			(byte) 0x20, (byte) 0x31, (byte) 0x33, (byte) 0x3A, (byte) 0x34,
			(byte) 0x30, (byte) 0x3A, (byte) 0x30, (byte) 0x30, (byte) 0x0A,
			(byte) 0xBD, (byte) 0xBB, (byte) 0xD2, (byte) 0xD7, (byte) 0xB2,
			(byte) 0xCE, (byte) 0xBF, (byte) 0xBC, (byte) 0xBA, (byte) 0xC5,
			(byte) 0x28, (byte) 0x52, (byte) 0x45, (byte) 0x46, (byte) 0x4E,
			(byte) 0x4F, (byte) 0x2E, (byte) 0x29, (byte) 0x3A, (byte) 0x20,
			(byte) 0x32, (byte) 0x31, (byte) 0x31, (byte) 0x33, (byte) 0x34,
			(byte) 0x30, (byte) 0x36, (byte) 0x33, (byte) 0x35, (byte) 0x35,
			(byte) 0x31, (byte) 0x32, (byte) 0x0A, (byte) 0xBD, (byte) 0xBB,
			(byte) 0xD2, (byte) 0xD7, (byte) 0xBD, (byte) 0xF0, (byte) 0xB6,
			(byte) 0xEE, (byte) 0x3A, (byte) 0x20, (byte) 0x34, (byte) 0x37,
			(byte) 0x34, (byte) 0x33, (byte) 0x37, (byte) 0x36, (byte) 0x30,
			(byte) 0x2E, (byte) 0x30, (byte) 0x31, (byte) 0xD4, (byte) 0xAA,
			(byte) 0x0A, (byte) 0xB1, (byte) 0xB8, (byte) 0xD7, (byte) 0xA2,
			(byte) 0x3A, (byte) 0x20, (byte) 0x28, (byte) 0xBD, (byte) 0xBB,
			(byte) 0xD2, (byte) 0xD7, (byte) 0xB3, (byte) 0xC9, (byte) 0xB9,
			(byte) 0xA6, (byte) 0x2D, (byte) 0xD6, (byte) 0xD8, (byte) 0xB4,
			(byte) 0xF2, (byte) 0xD3, (byte) 0xA1, (byte) 0x29, (byte) 0x0A,
			(byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E,
			(byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E,
			(byte) 0xC9, (byte) 0xCC, (byte) 0xBB, (byte) 0xA7, (byte) 0xB4,
			(byte) 0xE6, (byte) 0xB8, (byte) 0xF9, (byte) 0x2E, (byte) 0x2E,
			(byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x2E,
			(byte) 0x2E, (byte) 0x2E, (byte) 0x2E, (byte) 0x0A, (byte) 0x0A,
			(byte) 0x0A, (byte) 0x0A, (byte) 0x0A, (byte) 0x0A, (byte) 0x03,
			(byte) 0xFF };
	/** 设置打印浓度 */
	public static byte[] printerDensity11 = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'B', (byte) 0x0B, (byte) 0x03, (byte) 0x26 };
	public static byte[] printerDensity10 = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'B', (byte) 0x0A, (byte) 0x03, (byte) 0x27 };
	/** 设置打印字库 */
	public static byte[] printerWordStock16 = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'D', '2', (byte) 0x03, (byte) 0x19 };

	public static byte[] printerWordStock24 = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'D', '1', (byte) 0x03, (byte) 0x1A };

	/** 设置行距 */
	public static byte[] printerLineSpace = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'E', 0x03, (byte) 0x03, (byte) 0x29 };

	/** 字体设置 */
	public static byte[] printerFontTypeHN = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x07, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'C', 'H', 'N', (byte) 0x03, (byte) 0x2B };

	public static byte[] printerFontTypeHD = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x07, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'C', 'H', 'D', (byte) 0x03, (byte) 0x21 };

	public static byte[] printerFontTypeWN = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x07, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'C', 'W', 'N', (byte) 0x03, (byte) 0x34 };

	public static byte[] printerFontTypeWD = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x07, (byte) 0x1B, (byte) 0x53, (byte) 0x2F,
			(byte) 0x0D, 'C', 'W', 'D', (byte) 0x03, (byte) 0x3E };

	// /** 非接卡检测 */
	// public static byte[] RFcardTest = new byte[] { (byte) 0x02, (byte) 0x00,
	// (byte) 0x07, (byte) 0xE2, (byte) 0x01, (byte) 0x2F, (byte) 0x01,
	// (byte) 0x0A, (byte) 0x00, (byte) 0x11, (byte) 0x03, (byte) 0xD2 };

	public static byte[] RFcardTest = new byte[] { (byte) 0x02, (byte) 0x00,
			(byte) 0x07, (byte) 0xE2, (byte) 0x01, (byte) 0x2F, (byte) 0x0D,
			(byte) 0x0D, (byte) 0x00, (byte) 0x01, (byte) 0x03, (byte) 0xC9 };// 0xC8
	/** 非接卡下电 */

	public static byte[] RFcardPoweroff = new byte[] { (byte) 0x02,
			(byte) 0x00, (byte) 0x06, (byte) 0xE2, (byte) 0x02, (byte) 0x2F,
			(byte) 0x01, (byte) 0xFF, (byte) 0xFF, (byte) 0x03, (byte) 0xCB };
	
	public static byte[] getMachineInfo = new byte[] { (byte) 0x02,
		(byte) 0x00, (byte) 0x04, (byte) 0xF1, (byte) 0x01, (byte) 0x2F,
		(byte) 0x01, (byte) 0x03, (byte) 0xD9 };
	
	public static byte[] getPnMn = new byte[] { (byte) 0x02,
		(byte) 0x00, (byte) 0x05, (byte) 0xFF, (byte) 0x01, (byte) 0x2F,
		(byte) 0x01,(byte) 0x0A, (byte) 0x03, (byte) 0xDC };
	

	public static boolean Rfcloop = true;
	
}
